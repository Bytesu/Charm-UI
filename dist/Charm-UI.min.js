"use strict";var Spinner=React.createClass({displayName:"Spinner",render:function(){return React.createElement("div",{className:"cu-spinner"})}}),ProgressBar=React.createClass({displayName:"ProgressBar",getInitialState:function(){return{rate:null,done:!1}},getDefaultProps:function(){return{speed:.6,spinner:!0,easing:"ease",maxRate:.96,incStep:.04,minStep:.005,maxStep:.03,trickle:!0,trickleSpeed:800,setTrickle:!1}},start:function(){this._init(),this.set("0.5%"),this.props.trickle&&this._autoInc()},set:function(t,e){!e&&this._init(),t=this._format(t),100===t?this.setState({rate:100}):(t=t>100*this.props.maxRate?100*this.props.maxRate:t,this.setState({rate:t}))},inc:function(t){this._init(),this.props.trickle&&this._autoInc(),t=t?this._format(t):100*this.props.incStep;var e=this.state.rate+t;this.set(e+"%",!0)},done:function(){this.set("100%"),setTimeout(function(){this.setState({done:!0}),setTimeout(function(){this.setState({rate:null})}.bind(this),2*this.props.speed*1e3)}.bind(this),1e3*this.props.speed)},_format:function(t){return"number"==typeof t?t>1?100*this.pros.maxRate:100*t:"string"==typeof t?parseFloat(t)>100?100*this.props.maxRate:parseFloat(t):void 0},_init:function(){this.state.done&&this.setState({done:!1}),this.timer&&this._clearInterval()},_autoInc:function(){var t,e;this.timer=setInterval(function(){return e=this._getRadomStep(),t=this.state.rate+e,console.log(e),t>100*this.props.maxRate?(console.log(100*this.props.maxRate),void this._clearInterval()):(console.log(t),void this.set(t+"%",!0))}.bind(this),this.props.trickleSpeed)},_clearInterval:function(){this.timer&&clearInterval(this.timer)},_getRadomStep:function(t,e){return t=t||100*this.props.minStep,e=e||100*this.props.maxStep,Math.random()*(e-t)+t},render:function(){var t={opacity:this.state.done?0:1,transition:"opacity "+2*this.props.speed+"s "+this.props.easing},e={width:this.state.rate?this.state.rate+"%":0,transition:"width "+this.props.speed+"s "+this.props.easing};return this.state.rate?React.createElement("div",{className:"cu-progress",style:t},React.createElement("div",{className:"cu-progress-bar",style:e}),this.props.spinner?React.createElement(Spinner,null):null):null}}),ToolTip=React.createClass({displayName:"ToolTip",getDefaultProps:function(){return{tip:"tip",trigger:"hover",delay:0,hoverable:!1,position:"tip",width:"200px",type:"span",aHref:"#"}},getInitialState:function(){return{position:this.props.position,isActive:!1,isOnTip:!1,tipHeight:""}},handleMouseOver:function(t){"hover"==this.props.trigger&&this.setState({isActive:!0})},handleMouseOut:function(t){"hover"==this.props.trigger&&setTimeout(function(){return this.state.isOnTip?!1:void this.setState({isActive:!1})}.bind(this),this.props.delay)},handleClick:function(t){"click"==this.props.trigger&&(this.state.isActive?this.setState({isActive:!1}):this.state.isActive||this.setState({isActive:!0}))},handleTipMouseOver:function(t){this.props.hoverable&&(this.setState({isOnTip:!0}),this.setState({isActive:!0}))},handleTipMouseOut:function(t){this.props.hoverable&&(this.setState({isOnTip:!1}),this.setState({isActive:!1}))},componentDidUpdate:function(){this.setTipPosition()},setTipPosition:function(){var t=this.refs.tip.getDOMNode(),e=this.refs.cont.getDOMNode();this.flag||(this.state.tipHeight=t.offsetHeight,this.flag=1);var i=t.offsetWidth,s=t.offsetHeight,o=e.offsetWidth,n=e.offsetHeight;switch(this.state.position){case"left":t.style.top=-(s-n)/2+"px",t.style.left=-(i+20)+"px";break;case"right":t.style.top=-(s-n)/2+"px",t.style.left="100%";break;case"top":t.style.left=-(i-o)/2+"px",t.style.bottom="100%";break;case"bottom":t.style.left=-(i-o)/2+"px",t.style.top="100%";break;default:t.style.top=-(s-n)/2+"px",t.style.left=-(i+20)+"px"}t.style.height=this.state.tipHeight-20+"px",this.prevertTipOverflow()},prevertTipOverflow:function(){var t=this.refs.tip.getDOMNode().getBoundingClientRect().left,e=(this.refs.tip.getDOMNode().getBoundingClientRect().top,this.refs.tip.getDOMNode().offsetWidth),i=(this.refs.tip.getDOMNode().offsetHeight,parseInt(document.body.clientWidth));if(0>t&&t+e>i)return!0;if(0>t){if("left"==this.state.position)return void this.setState({position:"top"});if("top"==this.state.position||"bottom"==this.state.position)return void this.setState({position:"right"})}if(t+e>i){if("right"==this.state.position)return void this.setState({position:"bottom"});if("bottom"==this.state.position||"top"==this.state.position)return void this.setState({position:"left"})}},getTipStyle:function(){return{display:this.state.isActive?"block":"none",color:"pink",backgroundColor:"#333",width:this.props.width}},render:function(){return"span"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("span",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"a"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("a",{href:this.props.aHref,ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"button"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("button",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):void 0}});
//# sourceMappingURL=data:application/json;base64,