var AddressList=React.createClass({displayName:"AddressList",getInitialState:function(){return{nowAddress:this.props.localAddress,isWrapShow:!1}},getDefaultProps:function(){return{}},handleBtnClick:function(){this.state.isWrapShow?this.setState({isWrapShow:!1}):(this.setState({isWrapShow:!0}),console.log("000000000000000"))},handleSelectAddress:function(t){this.setState({nowAddress:t}),this.setState({isWrapShow:!1})},render:function(){var t=this.state.isWrapShow?React.createElement(AddressWrap,{localAddress:this.props.localAddress,selectAddress:this.handleSelectAddress}):null;return React.createElement("div",{className:"AddressList"},React.createElement(AddressDropButton,{isClick:this.state.isWrapShow,onClick:this.handleBtnClick},this.state.nowAddress),t)}}),AddressDropButton=React.createClass({displayName:"AddressDropButton",getInitialState:function(){return{}},getDefaultProps:function(){return{}},handleClick:function(){this.props.onClick()},render:function(){return React.createElement("button",{className:"AddressDropButton",onClick:this.handleClick},this.props.children,React.createElement("span",{className:"triangle "+this.props.isClick}))}}),AddressWrap=React.createClass({displayName:"AddressWrap",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",{className:"AddressWrap"},React.createElement(AddressWrapTop,{localAddress:this.props.localAddress,selectAddress:this.props.selectAddress}))}}),AddressWrapTop=React.createClass({displayName:"AddressWrapTop",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",{className:"AddressWrapTop"},React.createElement(AddressLocation,{localAddress:this.props.localAddress,selectAddress:this.props.selectAddress}))}}),AddressLocation=React.createClass({displayName:"AddressLocation",getInitialState:function(){return{}},getDefaultProps:function(){return{}},handleClick:function(){this.props.selectAddress(this.props.localAddress)},render:function(){return React.createElement("div",null,"猜你在：",React.createElement("span",{onClick:this.handleClick},this.props.localAddress))}}),AddressSearch=React.createClass({displayName:"AddressSearch",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",null)}}),AddressListWrap=React.createClass({displayName:"AddressListWrap",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",null)}}),AddressListRow=React.createClass({displayName:"AddressListRow",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",null)}}),AddressSecondWrap=React.createClass({displayName:"AddressSecondWrap",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",null)}}),AddressSecondWrap=React.createClass({displayName:"AddressSecondWrap",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",null)}}),AddressSecondRow=React.createClass({displayName:"AddressSecondRow",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",null)}}),ScrollBar=React.createClass({displayName:"ScrollBar",getInitialState:function(){return{}},getDefaultProps:function(){return{}},render:function(){return React.createElement("div",null)}}),Spinner=React.createClass({displayName:"Spinner",render:function(){return React.createElement("div",{className:"cu-spinner"})}}),ProgressBar=React.createClass({displayName:"ProgressBar",getInitialState:function(){return{rate:null,done:!1}},getDefaultProps:function(){return{speed:.6,spinner:!0,easing:"ease",maxRate:.96,incStep:.04,minStep:.005,maxStep:.03,trickle:!0,trickleSpeed:800,setTrickle:!1}},start:function(){this._init(),this.set("0.5%"),this.props.trickle&&this._autoInc()},set:function(t,e){!e&&this._init(),t=this._format(t),100===t?this.setState({rate:100}):(t=t>100*this.props.maxRate?100*this.props.maxRate:t,this.setState({rate:t}))},inc:function(t){this._init(),this.props.trickle&&this._autoInc(),t=t?this._format(t):100*this.props.incStep;var e=this.state.rate+t;this.set(e+"%",!0)},done:function(){this.set("100%"),setTimeout(function(){this.setState({done:!0}),setTimeout(function(){this.setState({rate:null})}.bind(this),2*this.props.speed*1e3)}.bind(this),1e3*this.props.speed)},_format:function(t){return"number"==typeof t?t>1?100*this.pros.maxRate:100*t:"string"==typeof t?parseFloat(t)>100?100*this.props.maxRate:parseFloat(t):void 0},_init:function(){this.state.done&&this.setState({done:!1}),this.timer&&this._clearInterval()},_autoInc:function(){var t,e;this.timer=setInterval(function(){return e=this._getRadomStep(),t=this.state.rate+e,console.log(e),t>100*this.props.maxRate?(console.log(100*this.props.maxRate),void this._clearInterval()):(console.log(t),void this.set(t+"%",!0))}.bind(this),this.props.trickleSpeed)},_clearInterval:function(){this.timer&&clearInterval(this.timer)},_getRadomStep:function(t,e){return t=t||100*this.props.minStep,e=e||100*this.props.maxStep,Math.random()*(e-t)+t},render:function(){var t={opacity:this.state.done?0:1,transition:"opacity "+2*this.props.speed+"s "+this.props.easing},e={width:this.state.rate?this.state.rate+"%":0,transition:"width "+this.props.speed+"s "+this.props.easing};return this.state.rate?React.createElement("div",{className:"cu-progress",style:t},React.createElement("div",{className:"cu-progress-bar",style:e}),this.props.spinner?React.createElement(Spinner,null):null):null}}),ToolTip=React.createClass({displayName:"ToolTip",getDefaultProps:function(){return{tip:"tip",trigger:"hover",delay:0,hoverable:!1,position:"tip",width:"200px",type:"span",aHref:"#"}},getInitialState:function(){return{position:this.props.position,isActive:!1,isOnTip:!1,tipHeight:""}},handleMouseOver:function(t){"hover"==this.props.trigger&&this.setState({isActive:!0})},handleMouseOut:function(t){"hover"==this.props.trigger&&setTimeout(function(){return this.state.isOnTip?!1:void this.setState({isActive:!1})}.bind(this),this.props.delay)},handleClick:function(t){"click"==this.props.trigger&&(this.state.isActive?this.setState({isActive:!1}):this.state.isActive||this.setState({isActive:!0}))},handleTipMouseOver:function(t){this.props.hoverable&&(this.setState({isOnTip:!0}),this.setState({isActive:!0}))},handleTipMouseOut:function(t){this.props.hoverable&&(this.setState({isOnTip:!1}),this.setState({isActive:!1}))},componentDidUpdate:function(){this.setTipPosition()},setTipPosition:function(){var t=this.refs.tip.getDOMNode(),e=this.refs.cont.getDOMNode();this.flag||(this.state.tipHeight=t.offsetHeight,this.flag=1);var s=t.offsetWidth,i=t.offsetHeight,r=e.offsetWidth,n=e.offsetHeight;switch(this.state.position){case"left":t.style.top=-(i-n)/2+"px",t.style.left=-(s+20)+"px";break;case"right":t.style.top=-(i-n)/2+"px",t.style.left="100%";break;case"top":t.style.left=-(s-r)/2+"px",t.style.bottom="100%";break;case"bottom":t.style.left=-(s-r)/2+"px",t.style.top="100%";break;default:t.style.top=-(i-n)/2+"px",t.style.left=-(s+20)+"px"}t.style.height=this.state.tipHeight-20+"px",this.prevertTipOverflow()},prevertTipOverflow:function(){var t=this.refs.tip.getDOMNode().getBoundingClientRect().left,e=(this.refs.tip.getDOMNode().getBoundingClientRect().top,this.refs.tip.getDOMNode().offsetWidth),s=(this.refs.tip.getDOMNode().offsetHeight,parseInt(document.body.clientWidth));if(0>t&&t+e>s)return!0;if(0>t){if("left"==this.state.position)return void this.setState({position:"top"});if("top"==this.state.position||"bottom"==this.state.position)return void this.setState({position:"right"})}if(t+e>s){if("right"==this.state.position)return void this.setState({position:"bottom"});if("bottom"==this.state.position||"top"==this.state.position)return void this.setState({position:"left"})}},getTipStyle:function(){return{display:this.state.isActive?"block":"none",color:"pink",backgroundColor:"#333",width:this.props.width}},render:function(){return"span"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("span",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"a"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("a",{href:this.props.aHref,ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"button"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("button",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):void 0}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkZHJlc3NMaXN0L0FkZHJlc3NMaXN0LmpzeCIsIlByb2dyZXNzQmFyL1Byb2dyZXNzQmFyLmpzeCIsIlRvb2x0aXAvVG9vbHRpcC5qc3giXSwibmFtZXMiOlsiQWRkcmVzc0xpc3QiLCJSZWFjdCIsImNyZWF0ZUNsYXNzIiwiZGlzcGxheU5hbWUiLCJnZXRJbml0aWFsU3RhdGUiLCJub3dBZGRyZXNzIiwidGhpcyIsInByb3BzIiwibG9jYWxBZGRyZXNzIiwiaXNXcmFwU2hvdyIsImdldERlZmF1bHRQcm9wcyIsImhhbmRsZUJ0bkNsaWNrIiwic3RhdGUiLCJzZXRTdGF0ZSIsImNvbnNvbGUiLCJsb2ciLCJoYW5kbGVTZWxlY3RBZGRyZXNzIiwic2VsZWN0QWRkcmVzcyIsInJlbmRlciIsImFkZHJlc3NXcmFwIiwiY3JlYXRlRWxlbWVudCIsIkFkZHJlc3NXcmFwIiwiY2xhc3NOYW1lIiwiQWRkcmVzc0Ryb3BCdXR0b24iLCJpc0NsaWNrIiwib25DbGljayIsImhhbmRsZUNsaWNrIiwiY2hpbGRyZW4iLCJBZGRyZXNzV3JhcFRvcCIsIkFkZHJlc3NMb2NhdGlvbiIsIkFkZHJlc3NTZWFyY2giLCJBZGRyZXNzTGlzdFdyYXAiLCJBZGRyZXNzTGlzdFJvdyIsIkFkZHJlc3NTZWNvbmRXcmFwIiwiQWRkcmVzc1NlY29uZFJvdyIsIlNjcm9sbEJhciIsIlNwaW5uZXIiLCJQcm9ncmVzc0JhciIsInJhdGUiLCJkb25lIiwic3BlZWQiLCJzcGlubmVyIiwiZWFzaW5nIiwibWF4UmF0ZSIsImluY1N0ZXAiLCJtaW5TdGVwIiwibWF4U3RlcCIsInRyaWNrbGUiLCJ0cmlja2xlU3BlZWQiLCJzZXRUcmlja2xlIiwic3RhcnQiLCJfaW5pdCIsInNldCIsIl9hdXRvSW5jIiwibiIsIl9mb3JtYXQiLCJpbmMiLCJuZXdSYXRlIiwic2V0VGltZW91dCIsImJpbmQiLCJkYXRhIiwicHJvcyIsInBhcnNlRmxvYXQiLCJ0aW1lciIsIl9jbGVhckludGVydmFsIiwicmFuZG9tIiwic2V0SW50ZXJ2YWwiLCJfZ2V0UmFkb21TdGVwIiwiY2xlYXJJbnRlcnZhbCIsIm1pbiIsIm1heCIsIk1hdGgiLCJwcm9ncmVzc1N0eWxlIiwib3BhY2l0eSIsInRyYW5zaXRpb24iLCJiYXJTdHlsZSIsIndpZHRoIiwic3R5bGUiLCJUb29sVGlwIiwidGlwIiwidHJpZ2dlciIsImRlbGF5IiwiaG92ZXJhYmxlIiwicG9zaXRpb24iLCJ0eXBlIiwiYUhyZWYiLCJpc0FjdGl2ZSIsImlzT25UaXAiLCJ0aXBIZWlnaHQiLCJoYW5kbGVNb3VzZU92ZXIiLCJlIiwiaGFuZGxlTW91c2VPdXQiLCJoYW5kbGVUaXBNb3VzZU92ZXIiLCJoYW5kbGVUaXBNb3VzZU91dCIsImNvbXBvbmVudERpZFVwZGF0ZSIsInNldFRpcFBvc2l0aW9uIiwicmVmcyIsImdldERPTU5vZGUiLCJjb250IiwiZmxhZyIsIm9mZnNldEhlaWdodCIsInRpcFdpZHRoIiwib2Zmc2V0V2lkdGgiLCJjb250V2lkdGgiLCJjb250SGVpZ2h0IiwidG9wIiwibGVmdCIsImJvdHRvbSIsImhlaWdodCIsInByZXZlcnRUaXBPdmVyZmxvdyIsInRpcFgiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJhdmFpbFdpZHRoIiwicGFyc2VJbnQiLCJkb2N1bWVudCIsImJvZHkiLCJjbGllbnRXaWR0aCIsImdldFRpcFN0eWxlIiwiZGlzcGxheSIsImNvbG9yIiwiYmFja2dyb3VuZENvbG9yIiwicmVmIiwib25Nb3VzZU92ZXIiLCJvbk1vdXNlT3V0IiwiaHJlZiJdLCJtYXBwaW5ncyI6IkFBQ0EsR0FBSUEsYUFBQUMsTUFBQUMsYUFBaUNDLFlBQUEsY0FDakNDLGdCQUFpQixXQUNiLE9BQ0lDLFdBQVlDLEtBQUtDLE1BQU1DLGFBQ3ZCQyxZQUFZLElBR3BCQyxnQkFBaUIsV0FDYixVQUlKQyxlQUFnQixXQUNSTCxLQUFLTSxNQUFNSCxXQUtYSCxLQUFLTyxVQUFVSixZQUFZLEtBSjNCSCxLQUFLTyxVQUFVSixZQUFZLElBRTNCSyxRQUFRQyxJQUFJ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QWFDLE1BQUNvQixVQUNuSDFCLE1BQUFtQixjQUFBLE9BQUlzRyxZQUFDcEgsS0FBYXNGLG1CQUF1QitCLFdBQUVySCxLQUFZdUYsa0JBQUt2RSxVQUFtQixNQUFVbUcsSUFBQSxNQUFTNUMsTUFBQ3ZFLEtBQU0rRyxlQUFZL0csS0FBV0MsTUFBS3dFLE1BSmpKIiwiZmlsZSI6IkNoYXJtLVVJLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8g5pW05L2T57uE5Lu2XG52YXIgQWRkcmVzc0xpc3QgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5vd0FkZHJlc3M6IHRoaXMucHJvcHMubG9jYWxBZGRyZXNzLFxuICAgICAgICAgICAgaXNXcmFwU2hvdzogZmFsc2VcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGhhbmRsZUJ0bkNsaWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYoIXRoaXMuc3RhdGUuaXNXcmFwU2hvdykge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNXcmFwU2hvdzogdHJ1ZX0pO1xuICAgICAgICAgICAgLy8g5Ye6546w5YiX6KGo5LqL5Lu2XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnMDAwMDAwMDAwMDAwMDAwJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc1dyYXBTaG93OiBmYWxzZX0pO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBoYW5kbGVTZWxlY3RBZGRyZXNzOiBmdW5jdGlvbihzZWxlY3RBZGRyZXNzKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe25vd0FkZHJlc3M6IHNlbGVjdEFkZHJlc3N9KTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNXcmFwU2hvdzogZmFsc2V9KTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhZGRyZXNzV3JhcCA9IHRoaXMuc3RhdGUuaXNXcmFwU2hvdz88QWRkcmVzc1dyYXAgbG9jYWxBZGRyZXNzPXt0aGlzLnByb3BzLmxvY2FsQWRkcmVzc30gc2VsZWN0QWRkcmVzcz17dGhpcy5oYW5kbGVTZWxlY3RBZGRyZXNzfS8+Om51bGw7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFkZHJlc3NMaXN0XCI+XG4gICAgICAgICAgICAgICAgPEFkZHJlc3NEcm9wQnV0dG9uIGlzQ2xpY2s9e3RoaXMuc3RhdGUuaXNXcmFwU2hvd30gb25DbGljaz17dGhpcy5oYW5kbGVCdG5DbGlja30+e3RoaXMuc3RhdGUubm93QWRkcmVzc308L0FkZHJlc3NEcm9wQnV0dG9uPlxuICAgICAgICAgICAgICAgIHthZGRyZXNzV3JhcH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyDkuIvmi4nmjInpkq5cbnZhciBBZGRyZXNzRHJvcEJ1dHRvbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge1xuXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge1xuXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBoYW5kbGVDbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25DbGljaygpO1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiQWRkcmVzc0Ryb3BCdXR0b25cIiBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfT5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e1widHJpYW5nbGUgXCIrdGhpcy5wcm9wcy5pc0NsaWNrfT48L3NwYW4+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5Zyw5Z2A5pON5L2c5qGG5a655ZmoXG52YXIgQWRkcmVzc1dyYXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICB9O1xuICAgIH0sXG4gICAgZ2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICB9O1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQWRkcmVzc1dyYXBcIj5cbiAgICAgICAgICAgICAgICA8QWRkcmVzc1dyYXBUb3AgbG9jYWxBZGRyZXNzPXt0aGlzLnByb3BzLmxvY2FsQWRkcmVzc30gc2VsZWN0QWRkcmVzcz17dGhpcy5wcm9wcy5zZWxlY3RBZGRyZXNzfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbi8vIOWcsOWdgOWIl+ihqOWktOmDqFxudmFyIEFkZHJlc3NXcmFwVG9wID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFkZHJlc3NXcmFwVG9wXCI+XG4gICAgICAgICAgICAgICAgPEFkZHJlc3NMb2NhdGlvbiBsb2NhbEFkZHJlc3M9e3RoaXMucHJvcHMubG9jYWxBZGRyZXNzfSBzZWxlY3RBZGRyZXNzPXt0aGlzLnByb3BzLnNlbGVjdEFkZHJlc3N9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5a6a5L2N5b2T5YmN5Zyw5Z2AXG52YXIgQWRkcmVzc0xvY2F0aW9uID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5zZWxlY3RBZGRyZXNzKHRoaXMucHJvcHMubG9jYWxBZGRyZXNzKTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIOeMnOS9oOWcqO+8mjxzcGFuIG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9Pnt0aGlzLnByb3BzLmxvY2FsQWRkcmVzc308L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5Zyw5Z2A5pCc57SiXG52YXIgQWRkcmVzc1NlYXJjaCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge1xuXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge1xuXG4gICAgICAgIH07XG4gICAgfSxcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5Zyw5Z2A5YiX6KGo5a655ZmoXG52YXIgQWRkcmVzc0xpc3RXcmFwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyDlnLDlnYDliJfooajooYxcbnZhciBBZGRyZXNzTGlzdFJvdyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge1xuXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge1xuXG4gICAgICAgIH07XG4gICAgfSxcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5LqM57qn5Zyw5Z2A5YiX6KGo5a655ZmoXG52YXIgQWRkcmVzc1NlY29uZFdyYXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICB9O1xuICAgIH0sXG4gICAgZ2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICB9O1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbi8vIOS6jOe6p+WcsOWdgOWIl+ihqOWuueWZqFxudmFyIEFkZHJlc3NTZWNvbmRXcmFwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyDkuoznuqflnLDlnYDliJfooajooYxcbnZhciBBZGRyZXNzU2Vjb25kUm93ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyDmu5rliqjmnaHnu4Tku7ZcbnZhciBTY3JvbGxCYXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICB9O1xuICAgIH0sXG4gICAgZ2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICB9O1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG4iLCIndXNlIHN0cmljdCdcclxuXHJcbnZhciBTcGlubmVyID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xyXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImN1LXNwaW5uZXJcIj48L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59KTtcclxuXHJcbnZhciBQcm9ncmVzc0JhciA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcclxuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmF0ZTogbnVsbCxcclxuICAgICAgZG9uZTogZmFsc2VcclxuICAgIH07XHJcbiAgfSxcclxuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3BlZWQ6IDAuNixcclxuICAgICAgc3Bpbm5lcjogdHJ1ZSxcclxuICAgICAgZWFzaW5nOiAnZWFzZScsXHJcbiAgICAgIG1heFJhdGU6IDAuOTYsXHJcbiAgICAgIGluY1N0ZXA6IDAuMDQsXHJcbiAgICAgIG1pblN0ZXA6IDAuMDA1LFxyXG4gICAgICBtYXhTdGVwOiAwLjAzLFxyXG4gICAgICB0cmlja2xlOiB0cnVlLFxyXG4gICAgICB0cmlja2xlU3BlZWQ6IDgwMCxcclxuICAgICAgc2V0VHJpY2tsZTogZmFsc2VcclxuICAgIH07XHJcbiAgfSxcclxuICBzdGFydDogZnVuY3Rpb24oKSB7XHJcbiAgICB0aGlzLl9pbml0KCk7XHJcbiAgICB0aGlzLnNldCgnMC41JScpO1xyXG4gICAgdGhpcy5wcm9wcy50cmlja2xlICYmIHRoaXMuX2F1dG9JbmMoKTtcclxuICB9LFxyXG4gIHNldDogZnVuY3Rpb24obiwgdHJpY2tsZSkge1xyXG4gICAgIXRyaWNrbGUgJiYgdGhpcy5faW5pdCgpO1xyXG4gICAgbiA9IHRoaXMuX2Zvcm1hdChuKTtcclxuICAgIGlmIChuID09PSAxMDApIHtcclxuICAgICAgLyogZG9uZSAqL1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICByYXRlOiAxMDBcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBuID0gbiA+IHRoaXMucHJvcHMubWF4UmF0ZSAqIDEwMFxyXG4gICAgICAgID8gdGhpcy5wcm9wcy5tYXhSYXRlICogMTAwXHJcbiAgICAgICAgOiBuO1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICByYXRlOiBuXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgaW5jOiBmdW5jdGlvbihuKSB7XHJcbiAgICB0aGlzLl9pbml0KCk7XHJcbiAgICB0aGlzLnByb3BzLnRyaWNrbGUgJiYgdGhpcy5fYXV0b0luYygpO1xyXG4gICAgbiA9IG5cclxuICAgICAgPyB0aGlzLl9mb3JtYXQobilcclxuICAgICAgOiB0aGlzLnByb3BzLmluY1N0ZXAgKiAxMDA7XHJcbiAgICB2YXIgbmV3UmF0ZSA9IHRoaXMuc3RhdGUucmF0ZSArIG47XHJcbiAgICB0aGlzLnNldChuZXdSYXRlICsgJyUnLCB0cnVlKTtcclxuICB9LFxyXG4gIGRvbmU6IGZ1bmN0aW9uKCkge1xyXG4gICAgdGhpcy5zZXQoJzEwMCUnKTtcclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgIGRvbmU6IHRydWVcclxuICAgICAgfSk7XHJcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICByYXRlOiBudWxsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0uYmluZCh0aGlzKSwgdGhpcy5wcm9wcy5zcGVlZCAqIDIgKiAxMDAwKTtcclxuICAgIH0uYmluZCh0aGlzKSwgdGhpcy5wcm9wcy5zcGVlZCAqIDEwMDApO1xyXG4gIH0sXHJcbiAgX2Zvcm1hdDogZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnbnVtYmVyJykge1xyXG4gICAgICByZXR1cm4gZGF0YSA+IDFcclxuICAgICAgICA/IHRoaXMucHJvcy5tYXhSYXRlICogMTAwXHJcbiAgICAgICAgOiBkYXRhICogMTAwO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoZGF0YSkgPiAxMDBcclxuICAgICAgICA/IHRoaXMucHJvcHMubWF4UmF0ZSAqIDEwMFxyXG4gICAgICAgIDogcGFyc2VGbG9hdChkYXRhKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICB9LFxyXG4gIF9pbml0OiBmdW5jdGlvbigpIHtcclxuICAgIHRoaXMuc3RhdGUuZG9uZSAmJiB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgZG9uZTogZmFsc2VcclxuICAgIH0pO1xyXG4gICAgdGhpcy50aW1lciAmJiB0aGlzLl9jbGVhckludGVydmFsKCk7XHJcbiAgfSxcclxuICBfYXV0b0luYzogZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgbmV3UmF0ZTtcclxuICAgIHZhciByYW5kb207XHJcbiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJhbmRvbSA9IHRoaXMuX2dldFJhZG9tU3RlcCgpO1xyXG4gICAgICBuZXdSYXRlID0gdGhpcy5zdGF0ZS5yYXRlICsgcmFuZG9tO1xyXG4gICAgICBjb25zb2xlLmxvZyhyYW5kb20pO1xyXG4gICAgICBpZiAobmV3UmF0ZSA+IHRoaXMucHJvcHMubWF4UmF0ZSAqIDEwMCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMucHJvcHMubWF4UmF0ZSAqIDEwMCk7XHJcbiAgICAgICAgdGhpcy5fY2xlYXJJbnRlcnZhbCgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBjb25zb2xlLmxvZyhuZXdSYXRlKTtcclxuICAgICAgdGhpcy5zZXQobmV3UmF0ZSArICclJywgdHJ1ZSk7XHJcbiAgICB9LmJpbmQodGhpcyksIHRoaXMucHJvcHMudHJpY2tsZVNwZWVkKTtcclxuICB9LFxyXG4gIF9jbGVhckludGVydmFsOiBmdW5jdGlvbigpIHtcclxuICAgIHRoaXMudGltZXIgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTtcclxuICB9LFxyXG4gIF9nZXRSYWRvbVN0ZXA6IGZ1bmN0aW9uKG1pbiwgbWF4KSB7XHJcbiAgICBtaW4gPSBtaW4gfHwgdGhpcy5wcm9wcy5taW5TdGVwICogMTAwO1xyXG4gICAgbWF4ID0gbWF4IHx8IHRoaXMucHJvcHMubWF4U3RlcCAqIDEwMDtcclxuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW47XHJcbiAgfSxcclxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xyXG4gICAgdmFyIHByb2dyZXNzU3R5bGUgPSB7XHJcbiAgICAgIC8vZGlzcGxheTogKCF0aGlzLnN0YXRlLnJhdGUgJiYgdHlwZW9mIHRoaXMuc3RhdGUucmF0ZSA9PT0gJ29iamVjdCcpID8gJ25vbmUnIDogJ2Jsb2NrJyxcclxuICAgICAgb3BhY2l0eTogdGhpcy5zdGF0ZS5kb25lXHJcbiAgICAgICAgPyAwXHJcbiAgICAgICAgOiAxLFxyXG4gICAgICB0cmFuc2l0aW9uOiAnb3BhY2l0eSAnICsgdGhpcy5wcm9wcy5zcGVlZCAqIDIgKyAncyAnICsgdGhpcy5wcm9wcy5lYXNpbmdcclxuICAgIH07XHJcbiAgICB2YXIgYmFyU3R5bGUgPSB7XHJcbiAgICAgIHdpZHRoOiAhdGhpcy5zdGF0ZS5yYXRlXHJcbiAgICAgICAgPyAwXHJcbiAgICAgICAgOiB0aGlzLnN0YXRlLnJhdGUgKyAnJScsXHJcbiAgICAgIHRyYW5zaXRpb246ICd3aWR0aCAnICsgdGhpcy5wcm9wcy5zcGVlZCArICdzICcgKyB0aGlzLnByb3BzLmVhc2luZ1xyXG4gICAgfTtcclxuICAgIHJldHVybiB0aGlzLnN0YXRlLnJhdGVcclxuICAgICAgPyAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjdS1wcm9ncmVzc1wiIHN0eWxlPXtwcm9ncmVzc1N0eWxlfT5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY3UtcHJvZ3Jlc3MtYmFyXCIgc3R5bGU9e2JhclN0eWxlfT48L2Rpdj5cclxuICAgICAgICAgIHt0aGlzLnByb3BzLnNwaW5uZXJcclxuICAgICAgICAgICAgPyA8U3Bpbm5lci8+XHJcbiAgICAgICAgICAgIDogbnVsbH1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKVxyXG4gICAgICA6IG51bGw7XHJcbiAgfVxyXG59KTtcclxuIiwidmFyIFRvb2xUaXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XHJcbiAgICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHRpcDogXCJ0aXBcIixcclxuICAgICAgICAgICAgdHJpZ2dlcjogJ2hvdmVyJyxcclxuICAgICAgICAgICAgZGVsYXk6IDAsXHJcbiAgICAgICAgICAgIGhvdmVyYWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBcInRpcFwiLFxyXG4gICAgICAgICAgICB3aWR0aDogXCIyMDBweFwiLFxyXG4gICAgICAgICAgICB0eXBlOiAnc3BhbicsXHJcbiAgICAgICAgICAgIGFIcmVmOiBcIiNcIlxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogdGhpcy5wcm9wcy5wb3NpdGlvbixcclxuICAgICAgICAgICAgaXNBY3RpdmU6IGZhbHNlLFxyXG4gICAgICAgICAgICBpc09uVGlwOiBmYWxzZSxcclxuICAgICAgICAgICAgdGlwSGVpZ2h0OiBcIlwiXHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBoYW5kbGVNb3VzZU92ZXI6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBpZih0aGlzLnByb3BzLnRyaWdnZXI9PVwiaG92ZXJcIikge1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc0FjdGl2ZTogdHJ1ZX0pO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBoYW5kbGVNb3VzZU91dDogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIGlmKHRoaXMucHJvcHMudHJpZ2dlcj09XCJob3ZlclwiKSB7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnN0YXRlLmlzT25UaXApIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc0FjdGl2ZTogZmFsc2V9KTtcclxuICAgICAgICAgICAgfS5iaW5kKHRoaXMpICwgdGhpcy5wcm9wcy5kZWxheSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgaWYodGhpcy5wcm9wcy50cmlnZ2VyPT1cImNsaWNrXCIpIHtcclxuICAgICAgICAgICAgaWYodGhpcy5zdGF0ZS5pc0FjdGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNBY3RpdmU6IGZhbHNlfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZighdGhpcy5zdGF0ZS5pc0FjdGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNBY3RpdmU6IHRydWV9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBoYW5kbGVUaXBNb3VzZU92ZXI6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBpZih0aGlzLnByb3BzLmhvdmVyYWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc09uVGlwOiB0cnVlfSk7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2lzQWN0aXZlOiB0cnVlfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGhhbmRsZVRpcE1vdXNlT3V0OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgaWYodGhpcy5wcm9wcy5ob3ZlcmFibGUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNPblRpcDogZmFsc2V9KTtcclxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNBY3RpdmU6IGZhbHNlfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNvbXBvbmVudERpZFVwZGF0ZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5zZXRUaXBQb3NpdGlvbigpO1xyXG4gICAgfSxcclxuICAgIHNldFRpcFBvc2l0aW9uOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgdGlwID0gdGhpcy5yZWZzLnRpcC5nZXRET01Ob2RlKCk7XHJcbiAgICAgICAgdmFyIGNvbnQgPSB0aGlzLnJlZnMuY29udC5nZXRET01Ob2RlKCk7XHJcbiAgICAgICAgaWYoIXRoaXMuZmxhZykge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlLnRpcEhlaWdodCA9IHRpcC5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgICAgIHRoaXMuZmxhZyA9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciB0aXBXaWR0aCA9IHRpcC5vZmZzZXRXaWR0aDtcclxuICAgICAgICB2YXIgdGlwSGVpZ2h0ID0gdGlwLm9mZnNldEhlaWdodDtcclxuICAgICAgICB2YXIgY29udFdpZHRoID0gY29udC5vZmZzZXRXaWR0aDtcclxuICAgICAgICB2YXIgY29udEhlaWdodCA9IGNvbnQub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5zdGF0ZS5wb3NpdGlvbikge1xyXG4gICAgICAgICAgICBjYXNlIFwibGVmdFwiOnRpcC5zdHlsZS50b3AgPSAtKHRpcEhlaWdodC1jb250SGVpZ2h0KS8yK1wicHhcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGlwLnN0eWxlLmxlZnQgPSAtKHRpcFdpZHRoKzIwKStcInB4XCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInJpZ2h0XCI6dGlwLnN0eWxlLnRvcCA9IC0odGlwSGVpZ2h0LWNvbnRIZWlnaHQpLzIrXCJweFwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXAuc3R5bGUubGVmdCA9IFwiMTAwJVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ0b3BcIjp0aXAuc3R5bGUubGVmdCA9IC0odGlwV2lkdGgtY29udFdpZHRoKS8yK1wicHhcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGlwLnN0eWxlLmJvdHRvbSA9IFwiMTAwJVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJib3R0b21cIjp0aXAuc3R5bGUubGVmdCA9IC0odGlwV2lkdGgtY29udFdpZHRoKS8yK1wicHhcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGlwLnN0eWxlLnRvcCA9IFwiMTAwJVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IHRpcC5zdHlsZS50b3AgPSAtKHRpcEhlaWdodC1jb250SGVpZ2h0KS8yK1wicHhcIjtcclxuICAgICAgICAgICAgICAgICAgICB0aXAuc3R5bGUubGVmdCA9IC0odGlwV2lkdGgrMjApK1wicHhcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGlwLnN0eWxlLmhlaWdodCA9IHRoaXMuc3RhdGUudGlwSGVpZ2h0LTIwK1wicHhcIjtcclxuICAgICAgICB0aGlzLnByZXZlcnRUaXBPdmVyZmxvdygpO1xyXG4gICAgfSxcclxuICAgIHByZXZlcnRUaXBPdmVyZmxvdzogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIHRpcFggPSB0aGlzLnJlZnMudGlwLmdldERPTU5vZGUoKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xyXG4gICAgICAgIHZhciB0aXBZID0gdGhpcy5yZWZzLnRpcC5nZXRET01Ob2RlKCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wO1xyXG4gICAgICAgIHZhciB0aXBXaWR0aCA9IHRoaXMucmVmcy50aXAuZ2V0RE9NTm9kZSgpLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIHZhciB0aXBIZWlnaHQgPSB0aGlzLnJlZnMudGlwLmdldERPTU5vZGUoKS5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgdmFyIGF2YWlsV2lkdGggPSBwYXJzZUludChkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoKTtcclxuICAgICAgICBpZih0aXBYIDwgMCAmJiB0aXBYK3RpcFdpZHRoID4gYXZhaWxXaWR0aCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGlwWCA8IDApIHtcclxuICAgICAgICAgICAgaWYodGhpcy5zdGF0ZS5wb3NpdGlvbiA9PSBcImxlZnRcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7cG9zaXRpb246IFwidG9wXCJ9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYodGhpcy5zdGF0ZS5wb3NpdGlvbiA9PSBcInRvcFwiIHx8IHRoaXMuc3RhdGUucG9zaXRpb24gPT0gXCJib3R0b21cIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7cG9zaXRpb246IFwicmlnaHRcIn0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aXBYK3RpcFdpZHRoID4gYXZhaWxXaWR0aCkge1xyXG4gICAgICAgICAgICBpZih0aGlzLnN0YXRlLnBvc2l0aW9uID09IFwicmlnaHRcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7cG9zaXRpb246IFwiYm90dG9tXCJ9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYodGhpcy5zdGF0ZS5wb3NpdGlvbiA9PSBcImJvdHRvbVwiIHx8IHRoaXMuc3RhdGUucG9zaXRpb24gPT0gXCJ0b3BcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7cG9zaXRpb246IFwibGVmdFwifSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0sXHJcbiAgICBnZXRUaXBTdHlsZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgZGlzcGxheTogdGhpcy5zdGF0ZS5pc0FjdGl2ZT9cImJsb2NrXCI6XCJub25lXCIsXHJcbiAgICAgICAgICAgIGNvbG9yOiBcInBpbmtcIixcclxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcIiMzMzNcIixcclxuICAgICAgICAgICAgd2lkdGg6IHRoaXMucHJvcHMud2lkdGgsXHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGlmKHRoaXMucHJvcHMudHlwZT09XCJzcGFuXCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17XCJ0b29sdGlwIFwiK3RoaXMuc3RhdGUucG9zaXRpb259PlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIHJlZj1cImNvbnRcIiBvbk1vdXNlT3Zlcj17dGhpcy5oYW5kbGVNb3VzZU92ZXJ9IG9uTW91c2VPdXQ9e3RoaXMuaGFuZGxlTW91c2VPdXR9IG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9Pnt0aGlzLnByb3BzLmNoaWxkcmVufTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IG9uTW91c2VPdmVyPXt0aGlzLmhhbmRsZVRpcE1vdXNlT3Zlcn0gb25Nb3VzZU91dD17dGhpcy5oYW5kbGVUaXBNb3VzZU91dH0gY2xhc3NOYW1lPVwidGlwXCIgcmVmPVwidGlwXCIgc3R5bGU9e3RoaXMuZ2V0VGlwU3R5bGUoKX0+e3RoaXMucHJvcHMudGlwfTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLnByb3BzLnR5cGU9PVwiYVwiKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e1widG9vbHRpcCBcIit0aGlzLnN0YXRlLnBvc2l0aW9ufT5cclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPXt0aGlzLnByb3BzLmFIcmVmfSByZWY9XCJjb250XCIgb25Nb3VzZU92ZXI9e3RoaXMuaGFuZGxlTW91c2VPdmVyfSBvbk1vdXNlT3V0PXt0aGlzLmhhbmRsZU1vdXNlT3V0fSBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfT57dGhpcy5wcm9wcy5jaGlsZHJlbn08L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBvbk1vdXNlT3Zlcj17dGhpcy5oYW5kbGVUaXBNb3VzZU92ZXJ9IG9uTW91c2VPdXQ9e3RoaXMuaGFuZGxlVGlwTW91c2VPdXR9IGNsYXNzTmFtZT1cInRpcFwiIHJlZj1cInRpcFwiIHN0eWxlPXt0aGlzLmdldFRpcFN0eWxlKCl9Pnt0aGlzLnByb3BzLnRpcH08L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5wcm9wcy50eXBlPT1cImJ1dHRvblwiKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e1widG9vbHRpcCBcIit0aGlzLnN0YXRlLnBvc2l0aW9ufT5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHJlZj1cImNvbnRcIiBvbk1vdXNlT3Zlcj17dGhpcy5oYW5kbGVNb3VzZU92ZXJ9IG9uTW91c2VPdXQ9e3RoaXMuaGFuZGxlTW91c2VPdXR9IG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9Pnt0aGlzLnByb3BzLmNoaWxkcmVufTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgb25Nb3VzZU92ZXI9e3RoaXMuaGFuZGxlVGlwTW91c2VPdmVyfSBvbk1vdXNlT3V0PXt0aGlzLmhhbmRsZVRpcE1vdXNlT3V0fSBjbGFzc05hbWU9XCJ0aXBcIiByZWY9XCJ0aXBcIiBzdHlsZT17dGhpcy5nZXRUaXBTdHlsZSgpfT57dGhpcy5wcm9wcy50aXB9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9