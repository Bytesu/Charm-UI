var AddressList=React.createClass({displayName:"AddressList",getInitialState:function(){return{nowAddress:null,isWrapShow:!1}},handleBtnClick:function(){this.setState({isWrapShow:!this.state.isWrapShow})},handleSelectAddress:function(e){this.setState({nowAddress:e,isWrapShow:!1}),this.props.setCity&&this.props.setCity(e)},render:function(){return React.createElement("div",{className:"AddressList"},React.createElement(AddressDropButton,{triangleState:this.state.isWrapShow,onClick:this.handleBtnClick},this.state.nowAddress?this.state.nowAddress:this.props.localAddress),this.state.isWrapShow?React.createElement(AddressWrap,{addressData:this.props.addressData,localAddress:this.props.localAddress,handleSelectAddress:this.handleSelectAddress}):null)}}),AddressDropButton=React.createClass({displayName:"AddressDropButton",handleClick:function(){this.props.onClick()},render:function(){return React.createElement("button",{className:"AddressDropButton",onClick:this.handleClick},this.props.children,React.createElement("span",{className:"triangle "+this.props.triangleState}))}}),AddressWrap=React.createClass({displayName:"AddressWrap",render:function(){return React.createElement("div",{className:"AddressWrap"},React.createElement("div",{className:"AddressCont"},React.createElement(AddressLocation,{localAddress:this.props.localAddress,handleSelectAddress:this.props.handleSelectAddress}),React.createElement(AddressSearchInput,{addressData:this.props.addressData,handleSelectAddress:this.props.handleSelectAddress}),React.createElement(AddressListWrap,{addressData:this.props.addressData,handleSelectAddress:this.props.handleSelectAddress})))}}),AddressLocation=React.createClass({displayName:"AddressLocation",handleClick:function(){this.props.handleSelectAddress(this.props.localAddress)},render:function(){return React.createElement("div",{className:"AddressLocation"},"猜你在：",React.createElement("span",{onClick:this.handleClick},this.props.localAddress))}}),AddressSearchInput=React.createClass({displayName:"AddressSearchInput",getInitialState:function(){return{result:[]}},handleResultClick:function(e){var t=e.target.getAttribute("data");this.props.handleSelectAddress(t)},handleSearch:function(e){var t=e.target.value,s=t.length,a=this.props.addressData,i=/^[\u4E00-\u9FA5]+$/;if(i.test(t)){var r=[],n=0;for(var o in a)for(var c in a[o])a[o][c].city.substring(0,s)==t&&(r[n]=a[o][c].city,n++);return void this.setState({result:r})}var l=t.substring(0,1).toLocaleUpperCase(),p=a[l],d=[],h=0;for(var u in p)u.substring(0,s)==t.toLocaleLowerCase()&&(d[h]=p[u].city),h++;this.setState({result:d})},render:function(){var e=this.handleResultClick,t=this.state.result.map(function(t){return React.createElement("li",{data:t,onClick:e},t)});return React.createElement("div",{className:"AddressSearch"},"直接搜索",React.createElement("input",{onChange:this.handleSearch,placeholder:"请输入城市名"}),React.createElement("ul",{className:"AddressSearchResult"},t))}}),AddressListWrap=React.createClass({displayName:"AddressListWrap",render:function(){var e=this.props.addressData,t=this.props.handleSelectAddress,s=function(e){var s=[],a=0;for(var i in e)s[a]=React.createElement(AddressListRow,{key:i,keyData:i,data:e[i],handleSelectAddress:t}),a++;return s}(e);return React.createElement("div",{className:"AddressListWrap"},s)}}),AddressListRow=React.createClass({displayName:"AddressListRow",handleClick:function(e){var t=e.target.getAttribute("data");this.props.handleSelectAddress(t)},render:function(){var e=this.handleClick,t=function(t){var s=[],a=0;for(var i in t)s[a]=React.createElement("span",{key:"p"+i},React.createElement("span",{data:t[i].city,key:a,onClick:e},t[i].city)),a++;return s}(this.props.data);return React.createElement("div",{className:"AddressListRow"},React.createElement("span",{className:"keyData"},this.props.keyData),React.createElement("span",{className:"dataWrap"},t))}}),AddressPicker=React.createClass({displayName:"AddressPicker",getInitialState:function(){return{city:"北京",currentCity:null,address:this.props.keyword}},getDefaultProps:function(){return{}},componentWillMount:function(){var e=new BMap.LocalCity;e.get(function(e){var t=e.name;this.setState({currentCity:t})}.bind(this))},setAddress:function(e){this.setState({address:e})},setCity:function(e){this.setState({city:e})},render:function(){var e=this.state.address?this.props.addressPickerActiveStyle:{};return React.createElement("div",{className:"address-picker",style:e},React.createElement(AddressList,{setCity:this.setCity,localAddress:this.state.currentCity,addressData:this.props.addressData}),React.createElement(AddressInput,React.__spread({},this.props,{city:this.state.city,searchSubmitHandler:this.setAddress})),React.createElement(AddressMap,{addressKeyword:this.state.address,city:this.props.city,theme:this.props.theme}))}}),AddressSearch=React.createClass({displayName:"AddressSearch",getInitialState:function(){return{address:null}},getDefaultProps:function(){return{inputWidth:400,inputTip:"输入想要搜索的地址",searchBtnText:"搜索",city:"北京",theme:"dark"}},componentWillMount:function(){var e=new BMap.LocalCity;e.get(function(e){var t=e.name;this.setCity(t)}.bind(this))},setAddress:function(e){this.setState({address:e})},setCity:function(e){this.setState({city:e})},render:function(){return React.createElement("div",{className:"address-search"},React.createElement(AddressInput,React.__spread({},this.props,{searchSubmitHandler:this.setAddress})),React.createElement(AddressMap,{addressKeyword:this.state.address,city:this.props.city,theme:this.props.theme}))}}),AddressInput=React.createClass({displayName:"AddressInput",getInitialState:function(){return{keyword:this.props.keyword}},getDefaultProps:function(){return{inputWidth:400,inputTip:"输入想要搜索的地址",searchBtnText:"搜索",city:"北京",theme:"light"}},searchSubmit:function(){var e=this.getDOMNode().children[0].value;this.props.searchSubmitHandler(e),setCookie("searchKeyword",e,30)},checkEnter:function(e){13===e.keyCode&&this.searchSubmit()},componentDidMount:function(){new BMap.Autocomplete({input:"_addressSearchKeyword",location:this.props.city})},render:function(){var e={width:this.props.inputWidth},t="address-input";switch(this.props.theme){case"light":break;case"dark":t+=" dark"}return React.createElement("div",{className:t},React.createElement("input",{className:"input-keyword",id:"_addressSearchKeyword",onKeyUp:this.checkEnter,placeholder:this.state.keyword||this.props.inputTip,style:e}),React.createElement("button",{className:"input-commit",onClick:this.searchSubmit},this.props.searchBtnText))}}),AddressMap=React.createClass({displayName:"AddressMap",getInitialState:function(){return{mapLocalObj:null,itemsNumber:0,itemsList:[],itemActive:0}},getDefaultProps:function(){return{mapSearchgeotableId:121763,mapSearchTags:"",mapSearchFilter:"",theme:"light"}},componentDidMount:function(){this.map=new BMap.Map("_addressMapMain",{enableMapClick:!1}),this.map.centerAndZoom(this.props.city,12)},componentWillReceiveProps:function(e){e.addressKeyword&&this.getNearby(e.addressKeyword)},getNearby:function(e,t){var s=new BMap.Geocoder,a=this;s.getPoint(e,function(e){e?$.ajax({type:"get",url:"http://api.map.baidu.com/geosearch/v3/nearby",dataType:"jsonp",data:{ak:"sdp9qCbToS7E23nDRxaAAwbh",geotable_id:121763,location:e.lng+","+e.lat,radius:1e4,page_index:t||0,page_size:50},jsonp:"callback",success:function(e){a.setState({itemsNumber:e.total,itemsList:e.contents}),a.showNearby(),a.map.centerAndZoom(a.props.addressKeyword,12)}}):alert("未找到该区域信息")}.bind(this),this.props.city)},showNearby:function(){var e=this;for(var t in this.state.itemsList){var s=new BMap.Point(this.state.itemsList[t].location[0],this.state.itemsList[t].location[1]),a=new BMap.Marker(s),i=new BMap.Label(String.fromCharCode(65+parseInt(t)),{offset:new BMap.Size(4,2)});i.setStyle({border:"none",backgroundColor:"transparent",color:"#FAFAFA"}),a.setLabel(i),a.setTitle(this.state.itemsList[t].title),a.addEventListener("click",function(t){e.showInfoWindow(this.getLabel().content.charCodeAt(0)-65)}),this.map.addOverlay(a)}this.state.itemsList.length&&this.showInfoWindow(0)},showInfoWindow:function(e){if(e!==this.state.itemActive,!0){var t=new BMap.Point(this.state.itemsList[e].location[0],this.state.itemsList[e].location[1]),s=this.state.itemsList[e],a=s.title,i=s.address,r=(s.tel,'<p class="map-info-window">地址：'+i+"</p>"),n=new BMap.InfoWindow(r,{title:a,width:290,panel:"panel",enableAutoPan:!0,offset:new BMap.Size(0,-25)});this.setState({itemActive:+e}),this.map.openInfoWindow(n,t)}},clickMapItem:function(e){var t=e.target,s=t.getAttribute("class"),a=0;a="map-item"===s?t.getAttribute("data-key"):"map-item-mark"===s||"map-item-main"===s?t.parentNode.getAttribute("data-key"):s?t.parentNode.parentNode.getAttribute("data-key"):t.parentNode.parentNode.parentNode.getAttribute("data-key"),this.showInfoWindow(a)},render:function(){var e="address-map";switch(this.props.theme){case"light":break;case"dark":e+=" dark"}var t={backgroundColor:"#181211"};return React.createElement("div",{className:e,style:{display:this.props.addressKeyword?"block":"none"}},React.createElement("div",{className:"map-nav"},React.createElement("div",{className:"map-nav-title"},"附近有",React.createElement("span",{className:"map-nav-number"},this.state.itemsNumber),"家体验店"),React.createElement("ul",{className:"map-items",id:"_addressMapItems",onClick:this.clickMapItem},this.state.itemsList.map(function(e,s){return React.createElement("li",{className:"map-item","data-key":s,key:s,style:s===this.state.itemActive?t:{}},React.createElement("span",{className:"map-item-mark"},String.fromCharCode(65+s)),React.createElement("div",{className:"map-item-main"},React.createElement("div",{className:"map-item-title"},e.title),React.createElement("div",{className:"map-item-address"},"地址：",e.address),React.createElement("div",{className:"map-item-tel"},"电话：",e.tel)))}.bind(this)))),React.createElement("div",{className:"map-main",id:"_addressMapMain"}))}}),FilterOption=React.createClass({displayName:"FilterOption",render:function(){var e,t=this.props.value,s=this.props.onSelect.bind(null,t),a=React.createElement("span",null,t.value);return e=this.props.isMultiSelect?React.createElement("label",{href:"#",htmlFor:t.name},React.createElement("input",{onClick:s,type:"checkbox",name:t.name,value:t.value,id:t.value}),a):React.createElement("a",{href:"#",onClick:s},a)}}),FilterAction=React.createClass({displayName:"FilterAction",render:function(){return React.createElement("div",{className:"filter-action"},React.createElement("a",{style:{display:this.props.multiToggleStatus?"inline":"none"},onClick:this.props.multiToggle,href:"#",className:"multi-toggle"},"多选"),React.createElement("a",{onClick:this.props.expandToggle,href:"#"},this.props.expandToggleStatus?"更多":"收起"))}}),FilterStateTag=React.createClass({displayName:"FilterStateTag",render:function(){var e,t=Array.isArray(this.props.value)?this.props.value:[this.props.value];return e=t.map(function(e,t,s){return this.props.treeView?React.createElement("span",{key:t},e.value," ",React.createElement("span",{className:"tag-remove"},React.createElement("a",{onClick:this.props.onTagRemove.bind(null,e),href:"#"},"×")),t==s.length-1?null:React.createElement("span",null,">")):t==s.length-1?React.createElement("span",{key:t},e.value," ",React.createElement("span",{className:"tag-remove"},React.createElement("a",{onClick:this.props.onTagRemove.bind(null,e),href:"#"},"×"))):React.createElement("span",{key:t},e.value+","," ")}.bind(this)),React.createElement("div",{className:"filter-tag"},React.createElement("div",{className:"tag-name"},this.props.name+":"," "),React.createElement("div",{className:"tag-value"},e))}}),FilterStateBar=React.createClass({displayName:"FilterStateBar",render:function(){var e=this.props.filterState,t=Object.keys(e).map(function(t,s){var a=e[t],i=this.props.getFilterDef(t);return React.createElement(FilterStateTag,{key:s,name:i.name,value:a,treeView:i.treeView,onTagRemove:this.props.onStateDelete.bind(null,t)})}.bind(this));return React.createElement("div",{className:"filter-state"},React.createElement("div",{className:"custom-content"},this.props.children),React.createElement("div",{className:"filter-tags"},t))}}),Filter=React.createClass({displayName:"Filter",getInitialState:function(){return{isMultiSelect:!1,isExpanded:!1,multiSelected:{}}},getDefaultProps:function(){return{canMultiSelect:!1,treeView:!1,options:[]}},multiSelectToggle:function(){this.setState({isMultiSelect:!this.state.isMultiSelect,isExpanded:this.state.isMultiSelect?!1:!0})},expandToggle:function(){this.setState({isMultiSelect:this.state.isExpanded?!1:this.state.isMultiSelect,isExpanded:!this.state.isExpanded})},updateMultiSelected:function(e){var t=this.state.multiSelected;t[e.value]=t[e.value]?null:e,this.setState({multiSelected:t})},confirmMultiSelect:function(){var e=this.state.multiSelected,t=[];for(var s in e)e.hasOwnProperty(s)&&e[s]&&t.push(e[s]);this.props.onSelectOption(t),this.setState({multiSelected:{}}),this.multiSelectToggle()},render:function(){var e=function(e){return this.state.isMultiSelect?void this.updateMultiSelected(e):void this.props.onSelectOption(e)}.bind(this),t=this.props.options.map(function(t,s){return React.createElement("li",{key:s,className:"filter-item"},React.createElement(FilterOption,{value:t,onSelect:e,isMultiSelect:this.state.isMultiSelect}))}.bind(this));return React.createElement("div",{className:"filter"+(this.state.isExpanded?" expanded":"")},React.createElement("div",{className:"head"},React.createElement("h4",{className:"filter-name"},this.props.name)),React.createElement("div",{className:"body"},React.createElement("ul",{className:"filter-items"},t),React.createElement("div",{style:{display:this.state.isMultiSelect?"block":"none"},className:"multi-confirm"},React.createElement("button",{className:"btn-confirm",onClick:this.confirmMultiSelect,type:"button",name:"confirm"},"确定"),React.createElement("button",{className:"btn-cancel",type:"button",name:"cancel",onClick:this.multiSelectToggle},"取消"))),React.createElement("div",{className:"foot"},React.createElement(FilterAction,{multiToggleStatus:this.props.canMultiSelect&&!this.state.isMultiSelect,expandToggleStatus:!this.state.isExpanded,multiToggle:this.multiSelectToggle,expandToggle:this.expandToggle})))}}),FilterGroup=React.createClass({displayName:"FilterGroup",getInitialState:function(){return{filterValues:this.props.filterValues,filterState:{}}},getDefaultProps:function(){return{filterValues:{},onStateChange:function(){}}},componentDidMount:function(){var e=this.props.filterDefs.reduce(function(e,t){return e[t.field]=t,e},{});this.setState({defIndex:e})},setFilterState:function(e){this.isSameState(this.state.filterState,e)||this.setState({filterState:e})},addFilterState:function(e,t){var s=this,a=s.state.defIndex,i=this.state.filterState,r=!1,n=!!i[e];if(a[e].treeView){var o=n?s.findIndex(i[e],t):-1,c=function(){if(!n)return!1;var a=i[e].length,r=s.props.filterValues[e]||[];return s.findIndex(r,t)>-1&&s.findIndex(r,i[e][a-1])>-1};r=!n||o!=i[e].length-1,r&&(i[e]=i[e]||[],o>=0?i[e]=i[e].slice(0,o+1):(c()&&i[e].pop(),i[e].push(t)))}else(!n||t.value!==i[e].value||Array.isArray(t)&&!s.isSameState(t,i[e]))&&(Array.isArray(t)&&0===t.length?s.removeFilterState(e):(i[e]=t,r=!0));r&&(s.setState({filterState:i}),s.props.onStateChange(this.state.filterState))},removeFilterState:function(e,t){var s,a=this.state.defIndex,i=this.state.filterState;a[e].treeView?(s=this.findIndex(i[e],t),0===s?delete i[e]:s>0&&(i[e]=i[e].slice(0,s))):delete i[e],this.setState({filterState:i}),this.props.onStateChange(this.state.filterState)},getFilterDef:function(e){return this.state.defIndex[e]},isSameState:function(e,t){var s=this;return s.isEmptyObj(e)&&!s.isEmptyObj(t)||!s.isEmptyObj(e)&&s.isEmptyObj(t)?!1:s.isEmptyObj(e)&&s.isEmptyObj(t)||Object.keys(e).filter(function(e){return s.props.filterDefs.hasOwnProperty(e)}).every(function(s){return e[s]===t[s]||e[s].value===t[s].value?!0:Array.isArray(e[s])&&Array.isArray(t[s])?e[s].every(function(e,a){return e===t[s][a]||e.value===t[s][a].value}):!1})},isSameValueArray:function(e,t){return e.every(function(e,s){return e.value===t[s].value})},isEmptyObj:function(e){return 0===Object.keys(e).length},findIndex:function(e,t){for(var s=0;s<e.length;s++)if(e[s].value===t.value)return s;return-1},render:function(){var e=this.props.filterDefs.map(function(e,t){var s=this.state.filterValues[e.field]||[];return React.createElement("li",{key:t,style:{display:s.length>0?"block":"none"}},React.createElement(Filter,{name:e.name,field:e.field,canMultiSelect:e.canMultiSelect,treeView:e.treeView,options:s,onSelectOption:this.addFilterState.bind(null,e.field)}))}.bind(this));return React.createElement("div",{className:"cu-filter-group"},React.createElement(FilterStateBar,{filterState:this.state.filterState,getFilterDef:this.getFilterDef,onStateDelete:this.removeFilterState},this.props.children),React.createElement("ul",{className:"filter-group"},e))}}),PaginationBtn=React.createClass({displayName:"PaginationBtn",getDefaultProps:function(){return{text:1,type:"num"}},render:function(){var e="dot"===this.props.type?"...":this.props.text,t=this.props.active?"item active":"item";return"num"!==this.props.type&&(t+=" page "+this.props.type),this.props.disabled&&(t+=" disabled"),React.createElement("li",{className:t,onClick:this.props.changePage},React.createElement("a",null,e))}}),PagiOverview=React.createClass({displayName:"PagiOverview",render:function(){return React.createElement("div",{className:"overview"},"共 ",this.props.pages," 页，")}}),PagiQuickGo=React.createClass({displayName:"PagiQuickGo",getInitialState:function(){return{pageInput:null}},inputChange:function(e){this.setState({pageInput:e.target.value})},quickGo:function(){if(this.state.pageInput){var e=+this.state.pageInput;e=1>e?1:e,e=e>this.props.pages?this.props.pages:e,this.props.setActivePage(e)}},render:function(){return React.createElement("div",{className:"quick-go"},React.createElement("span",null,"到第"),React.createElement("input",{className:"go-page",type:"number",min:"1",max:this.props.pages,onChange:this.inputChange}),React.createElement("span",null,"页"),React.createElement("button",{className:"go-submit",onClick:this.quickGo},"确认"))}}),PagiMain=React.createClass({displayName:"PagiMain",getInitialState:function(){return{pageItems:this.getPageItems(this.props.activePage)}},componentWillReceiveProps:function(e){if(e.activePage!==this.props.activePage){var t=this.getPageItems(e.activePage);this.setState({pageItems:t}),this.props.selected(e.activePage)}},handleItemClick:function(e,t){t="first"===e?1:"prev"===e?1===this.props.activePage?1:this.props.activePage-1:"next"===e?this.props.activePage===this.props.pages?this.props.pages:this.props.activePage+1:"last"===e?this.props.pages:t,t!==this.props.activePage&&this.props.setActivePage(t)},getPageItems:function(e){var t=[],s=this.props.basePages,a=this.props.midPages,i=this.props.pages;return e<=parseInt(a/2)+1?t=this._getSeriesNumber(1,s+a>=i?i:a):e<=parseInt(a/2)+1+s||s+a>=i?t=this._getSeriesNumber(1,s+a>=i?i:e+2):e<i-parseInt(a/2)-1?(t=this._getSeriesNumber(1,this.props.basePages),t.push(0),t=t.concat(this._getSeriesNumber(e-2,a)),i>a+s+2&&t.push(0)):e===i-parseInt(a/2)-1?(t=this._getSeriesNumber(1,this.props.basePages),t.push(0),t=t.concat(this._getSeriesNumber(i-a,a+1))):(t=this._getSeriesNumber(1,this.props.basePages),t.push(0),t=t.concat(this._getSeriesNumber(i-a+1,a))),t},_getSeriesNumber:function(e,t){e=e,t=t;for(var s=[];t--;)s.push(e++);return s},render:function(){var e=[],t=[];return this.props.pages>0&&(this.props.first&&e.push(React.createElement(PaginationBtn,{key:"first",text:this.props.first,disabled:1===this.props.activePage?!0:!1,type:"prev",type:"first",changePage:this.handleItemClick.bind(this,"first")})),this.props.prev&&e.push(React.createElement(PaginationBtn,{key:"prev",text:this.props.prev,disabled:1===this.props.activePage?!0:!1,type:"prev",changePage:this.handleItemClick.bind(this,"prev")})),this.props.next&&t.push(React.createElement(PaginationBtn,{key:"next",text:this.props.next,type:"next",disabled:this.props.activePage===this.props.pages?!0:!1,changePage:this.handleItemClick.bind(this,"next")})),this.props.last&&t.push(React.createElement(PaginationBtn,{key:"last",text:this.props.last,type:"last",disabled:this.props.activePage===this.props.pages?!0:!1,changePage:this.handleItemClick.bind(this,"last")}))),React.createElement("ul",{className:"pagi-main"},e,this.props.pages>0&&this.state.pageItems.map(function(e,t){return React.createElement(PaginationBtn,{key:t,text:e,type:e?"num":"dot",active:e===this.props.activePage?!0:!1,changePage:e?this.handleItemClick.bind(this,"num",e):null})}.bind(this)),t)}}),Pagination=React.createClass({displayName:"Pagination",propTypes:{pages:React.PropTypes.number},getInitialState:function(){return{activePage:this.props.activePage}},getDefaultProps:function(){return{activePage:1,first:null,prev:"上一页",basePages:2,midPages:5,ellipsis:!0,next:"下一页",last:null,theme:"light",quickGo:!1,selected:function(e){console.log(e)}}},setActivePage:function(e){this.setState({activePage:e})},render:function(){var e="light"===this.props.theme?"pagination":"pagination "+this.props.theme;return React.createElement("div",{className:e},React.createElement(PagiMain,React.__spread({},this.props,{activePage:this.state.activePage,setActivePage:this.setActivePage})),this.props.quickGo?React.createElement(PagiOverview,{pages:this.props.pages}):null,this.props.quickGo?React.createElement(PagiQuickGo,{pages:this.props.pages,setActivePage:this.setActivePage}):null)}}),Spinner=React.createClass({displayName:"Spinner",render:function(){return React.createElement("div",{className:"cu-spinner",style:{borderColor:this.props.color,borderLeftColor:"transparent"}})}}),ProgressBar=React.createClass({displayName:"ProgressBar",getInitialState:function(){return{rate:null,done:!1}},getDefaultProps:function(){return{speed:.6,spinner:!0,easing:"ease",maxRate:.96,incStep:.04,minStep:.005,maxStep:.03,trickle:!0,trickleSpeed:800,color:"#09c4c7",setTrickle:!1}},start:function(){this._init(),this.set("0.5%"),this.props.trickle&&this._autoInc()},set:function(e,t){!t&&this._init(),e=this._format(e),100===e?this.setState({rate:100}):(e=e>100*this.props.maxRate?100*this.props.maxRate:e,this.setState({rate:e}))},inc:function(e){this._init(),this.props.trickle&&this._autoInc(),e=e?this._format(e):100*this.props.incStep;var t=this.state.rate+e;this.set(t+"%",!0)},done:function(){this.set("100%"),setTimeout(function(){this.setState({done:!0}),setTimeout(function(){this.setState({rate:null})}.bind(this),2*this.props.speed*1e3)}.bind(this),1e3*this.props.speed)},_format:function(e){return"number"==typeof e?e>1?100*this.pros.maxRate:100*e:"string"==typeof e?parseFloat(e)>100?100*this.props.maxRate:parseFloat(e):void 0},_init:function(){this.state.done&&this.setState({done:!1}),this.timer&&this._clearInterval()},_autoInc:function(){var e,t;this.timer=setInterval(function(){return t=this._getRadomStep(),e=this.state.rate+t,console.log(t),e>100*this.props.maxRate?(console.log(100*this.props.maxRate),void this._clearInterval()):(console.log(e),void this.set(e+"%",!0))}.bind(this),this.props.trickleSpeed)},_clearInterval:function(){this.timer&&clearInterval(this.timer)},_getRadomStep:function(e,t){return e=e||100*this.props.minStep,t=t||100*this.props.maxStep,Math.random()*(t-e)+e},render:function(){var e={opacity:this.state.done?0:1,transition:"opacity "+this.props.speed+"s "+this.props.easing},t={width:this.state.rate?this.state.rate+"%":0,transition:"width "+this.props.speed+"s "+this.props.easing,backgroundColor:this.props.color,boxShadowColor:this.props.color};return this.state.rate?React.createElement("div",{className:"cu-progress",style:e},React.createElement("div",{className:"cu-progress-bar",style:t}),this.props.spinner?React.createElement(Spinner,{color:this.props.color}):null):null}}),ToolTip=React.createClass({displayName:"ToolTip",getDefaultProps:function(){return{tip:"tip",trigger:"hover",delay:0,hoverable:!1,position:"tip",width:"200px",type:"span",aHref:"#"}},getInitialState:function(){return{position:this.props.position,isActive:!1,isOnTip:!1,tipHeight:""}},handleMouseOver:function(e){"hover"==this.props.trigger&&this.setState({isActive:!0})},handleMouseOut:function(e){"hover"==this.props.trigger&&setTimeout(function(){return this.state.isOnTip?!1:void this.setState({isActive:!1})}.bind(this),this.props.delay)},handleClick:function(e){"click"==this.props.trigger&&(this.state.isActive?this.setState({isActive:!1}):this.state.isActive||this.setState({isActive:!0}))},handleTipMouseOver:function(e){this.props.hoverable&&(this.setState({isOnTip:!0}),this.setState({isActive:!0}))},handleTipMouseOut:function(e){this.props.hoverable&&(this.setState({isOnTip:!1}),this.setState({isActive:!1}))},componentDidUpdate:function(){this.setTipPosition()},setTipPosition:function(){var e=this.refs.tip.getDOMNode(),t=this.refs.cont.getDOMNode();this.flag||(this.state.tipHeight=e.offsetHeight,this.flag=1);var s=e.offsetWidth,a=e.offsetHeight,i=t.offsetWidth,r=t.offsetHeight;switch(this.state.position){case"left":e.style.top=-(a-r)/2+"px",e.style.left=-(s+20)+"px";break;case"right":e.style.top=-(a-r)/2+"px",e.style.left="100%";break;case"top":e.style.left=-(s-i)/2+"px",e.style.bottom="100%";break;case"bottom":e.style.left=-(s-i)/2+"px",e.style.top="100%";break;default:e.style.top=-(a-r)/2+"px",e.style.left=-(s+20)+"px"}e.style.height=this.state.tipHeight-20+"px",this.prevertTipOverflow()},prevertTipOverflow:function(){var e=this.refs.tip.getDOMNode().getBoundingClientRect().left,t=(this.refs.tip.getDOMNode().getBoundingClientRect().top,this.refs.tip.getDOMNode().offsetWidth),s=(this.refs.tip.getDOMNode().offsetHeight,parseInt(document.body.clientWidth));if(0>e&&e+t>s)return!0;if(0>e){if("left"==this.state.position)return void this.setState({position:"top"});if("top"==this.state.position||"bottom"==this.state.position)return void this.setState({position:"right"})}if(e+t>s){if("right"==this.state.position)return void this.setState({position:"bottom"});if("bottom"==this.state.position||"top"==this.state.position)return void this.setState({position:"left"})}},getTipStyle:function(){return{display:this.state.isActive?"block":"none",color:"pink",backgroundColor:"#333",width:this.props.width}},render:function(){return"span"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("span",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"a"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("a",{href:this.props.aHref,ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"button"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("button",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):void 0}});
//# sourceMappingURL=data:application/json;base64,